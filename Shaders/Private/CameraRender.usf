#include "/Engine/Private/Common.ush"

// float4x4 Projection;
Texture2D BackTexture;
Texture2D BackTextureUV;
SamplerState BaseSampler;
SamplerState BaseSamplerUV;

// VERTEX SHADER

void MainVS(
	float4 InPosition : ATTRIBUTE0,
	float2 InUV : ATTRIBUTE1,
	out float2 OutUV : TEXCOORD0,
	out float4 OutPosition : SV_POSITION
	)
{
	OutPosition = InPosition;
	OutUV = InUV;
}

// PIXEL SHADER

void MainPS(
	in float2 uv : TEXCOORD0,
	out float4 OutColor : SV_Target0
	)
{
	float2 cbcr = BackTextureUV.Sample(BaseSamplerUV, uv).ar - float2(0.5, 0.5);
	float3 ycbcr = float3(BackTexture.Sample(BaseSampler, uv).r, cbcr);

	// float3 ycbcr = float3(BackTexture.Sample(BaseSampler, uv).x, 0, 0);

	float3x3 ConvertMat = float3x3(
		1, 1, 1,
		0, -0.344, 1.772,
		1.402, -0.714, 0);
	float3 rgb = mul(transpose(ConvertMat), ycbcr);
	
	OutColor = float4(rgb, 1.0);
}